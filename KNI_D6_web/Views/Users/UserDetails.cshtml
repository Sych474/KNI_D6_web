@model KNI_D6_web.ViewModels.Users.UserDetailsViewModels.UserDetailsViewModel
@using KNI_D6_web.Model;
@using KNI_D6_web.ViewModels.Users.UserDetailsViewModels;
@{
    ViewData["Title"] = "О игроке";
}

<h1>О игроке @Model.UserName</h1>
<div class="m-2">
    <h3>Статус в клубе: @Model.Position.GetDescription()</h3>
</div>
<div class="m-2">
    @if (User.Identity.Name == Model.UserName || User.IsInRole(UserRoles.Admin))
    {
        <a class="btn btn-danger" asp-controller="Account" asp-action="ChangePassword" asp-route-login="@Model.UserName"> Изменить пароль </a>
    }
    @if (User.IsInRole(UserRoles.Admin))
    {
        <a class="btn btn-warning ml-1" asp-controller="Users" asp-action="Edit" asp-route-id="@Model.UserId"> Настроить роли </a>
    }
</div>
<div>
    <table class="table table-hover">
        <tbody>
            @foreach (var item in Model.Parameters)
            {
                <tr>
                    <td scope="row">@item.Name </td>
                    <td>@item.Value </td>
                    @if (User.IsInRole(UserRoles.Moderator) || User.IsInRole(UserRoles.Admin))
                    {
                        <td>
                            <a class="btn btn-success"
                               asp-controller="Parameters"
                               asp-action="IncrementParameterValue"
                               asp-route-parameterId="@item.Id"
                               asp-route-userId="@Model.UserId">
                                +
                            </a>

                            @if (item.Value == 0)
                            {
                                Html.Raw("disabled");
                                <button type="button" class="btn btn-danger" disabled>-</button>
                            }
                            else
                            {
                                Html.Raw("disabled");
                                <a class="btn btn-danger"
                                   asp-controller="Parameters"
                                   asp-action="DecrementParameterValue"
                                   asp-route-parameterId="@item.Id"
                                   asp-route-userId="@Model.UserId">
                                    -
                                </a>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

<div>
    <h2>Достижения </h2>
    <div class="pt-2">
        @if (Model.Achievements.Any())
        {
            <div class="container rounded rounded-lg mt-2 ">
                <ul class="list-unstyled">
                    @foreach (var item in Model.Achievements)
                    {
                        <li class="media border alert-success text-dark border-success border- rounded rounded-lg p-2 m-1">
                            <div class="media-body">
                                <h5 class="mt-0 mb-1">@item.Name</h5>
                                @item.Description
                                <br />
                            </div>
                        </li>
                    }
                </ul>
            </div>
        }
        else
        {
            <h5>Достижений пока нет, но скоро будут!</h5>
        }
    </div>
    <div class="p-2 text-center">
        <a class="btn btn-outline-primary m-1" asp-controller="Achievements" asp-action="Progress" asp-route-userLogin="@Model.UserName">Прогресс достижений</a>

        @if (User.IsInRole(UserRoles.Moderator) || User.IsInRole(UserRoles.Admin))
        {
            <a class="btn btn-primary m-1" asp-action="ManageAchievements" asp-route-userId="@Model.UserId">Изменить достижения</a>
        }
    </div>
</div>

<div>
    <h2>Текущие Посещения</h2>
    <div class="pt-2">
        @if (User.IsInRole(UserRoles.Moderator) || User.IsInRole(UserRoles.Admin))
        {
            @if (Model.CurrentEvents.Any())
            {
                <div class="container rounded rounded-lg mt-2 ">
                    <ul class="list-unstyled">
                        @foreach (var item in Model.CurrentEvents)
                        {
                            @switch (item.State)
                            {
                                case EventVisitState.Visited:
                                    <li class="media border alert-success text-dark border-success border- rounded rounded-lg p-2 m-1">
                                        <div class="media-body">
                                            <h5 class="mt-0 mb-1">@item.EventName</h5>
                                            @item.Date.ToString("dd/MM/yyyy")
                                            <br />
                                        </div>
                                    </li>
                                    break;
                                case EventVisitState.NotVisited:
                                    <li class="media border alert-danger text-dark border-success border- rounded rounded-lg p-2 m-1">
                                        <div class="media-body">
                                            <h5 class="mt-0 mb-1">@item.EventName</h5>
                                            @item.Date.ToString("dd/MM/yyyy")
                                            <br />
                                        </div>
                                    </li>
                                    break;
                                case EventVisitState.NotHappendYet:
                                    <li class="media border alert-secondary text-dark border-success border- rounded rounded-lg p-2 m-1">
                                        <div class="media-body">
                                            <h5 class="mt-0 mb-1">@item.EventName</h5>
                                            @item.Date.ToString("dd/MM/yyyy")
                                            <br />
                                        </div>
                                    </li>
                                    break;
                                default:
                                    break;
                            }
                        }
                    </ul>
                </div>
            }
            else
            {
                <h5>Посещений нет</h5>
            }
        }
        else
        {
            @if (Model.CurrentEvents.Where(i => i.State == EventVisitState.Visited).Any())
            {
                <div class="container rounded rounded-lg mt-2 ">
                    <ul class="list-unstyled">
                        @foreach (var item in Model.CurrentEvents.Where(i => i.State == EventVisitState.Visited))
                        {
                            <li class="media border alert-success text-dark border-success border- rounded rounded-lg p-2 m-1">
                                <div class="media-body">
                                    <h5 class="mt-0 mb-1">@item.EventName</h5>
                                    @item.Date.ToString("dd/MM/yyyy")
                                    <br />
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            }
            else
            {
                <h5>Посещений пока нет, но скоро будут!</h5>
            }
        }
    </div>
</div>

<div>
    <div class="p-2 text-center">
        <a class="btn btn-secondary" data-toggle="collapse" href="#collapseId" role="button" aria-expanded="false" aria-controls="collapseId"> Прошлые семестры </a>
    </div>

    <div class="collapse" id="collapseId">
        <h2>Посещения в прошлых семестрах</h2>
    <div class="pt-2">
        @if (User.IsInRole(UserRoles.Moderator) || User.IsInRole(UserRoles.Admin))
        {
            @if (Model.OldEvents.Any())
            {
                <div class="container rounded rounded-lg mt-2 ">
                    <ul class="list-unstyled">
                        @foreach (var item in Model.OldEvents)
                        {
                            @switch (item.State)
                            {
                                case EventVisitState.Visited:
                                    <li class="media border alert-success text-dark border-success border- rounded rounded-lg p-2 m-1">
                                        <div class="media-body">
                                            <h5 class="mt-0 mb-1">@item.EventName</h5>
                                            @item.Date.ToString("dd/MM/yyyy")
                                            <br />
                                        </div>
                                    </li>
                                    break;
                                case EventVisitState.NotVisited:
                                    <li class="media border alert-danger text-dark border-success border- rounded rounded-lg p-2 m-1">
                                        <div class="media-body">
                                            <h5 class="mt-0 mb-1">@item.EventName</h5>
                                            @item.Date.ToString("dd/MM/yyyy")
                                            <br />
                                        </div>
                                    </li>
                                    break;
                                case EventVisitState.NotHappendYet:
                                    <li class="media border alert-secondary text-dark border-success border- rounded rounded-lg p-2 m-1">
                                        <div class="media-body">
                                            <h5 class="mt-0 mb-1">@item.EventName</h5>
                                            @item.Date.ToString("dd/MM/yyyy")
                                            <br />
                                        </div>
                                    </li>
                                    break;
                                default:
                                    break;
                            }
                        }
                    </ul>
                </div>
            }
            else
            {
                <h5>Посещений нет</h5>
            }
        }
        else
        {
            @if (Model.OldEvents.Where(i => i.State == EventVisitState.Visited).Any())
            {
                <div class="container rounded rounded-lg mt-2 ">
                    <ul class="list-unstyled">
                        @foreach (var item in Model.OldEvents.Where(i => i.State == EventVisitState.Visited))
                        {
                            <li class="media border alert-success text-dark border-success border- rounded rounded-lg p-2 m-1">
                                <div class="media-body">
                                    <h5 class="mt-0 mb-1">@item.EventName</h5>
                                    @item.Date.ToString("dd/MM/yyyy")
                                    <br />
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            }
            else
            {
                <h5>Посещений пока нет, но скоро будут!</h5>
            }
        }
    </div>
</div>
</div>


<div>
    <a class="btn btn-outline-primary mt-4" asp-action="Index">К списку игроков</a>
</div>
